package mlkem

import (
	"bytes"
	"crypto/rand"
	"encoding/hex"
	"testing"
)

func fromHex(t *testing.T, h string) []byte {
	bytes, err := hex.DecodeString(h)
	if err != nil {
		t.Fatalf("hex.DecodeString() = %v", err)
	}
	return bytes
}

// Run through some selected test vectors from https://github.com/post-quantum-cryptography/KAT.
func TestKAT(t *testing.T) {
	for _, tc := range []struct {
		name       string
		parms      ParameterSet
		seed       []byte
		public     []byte
		private    []byte
		randomness []byte
		ss         []byte
		ct         []byte
	}{
		{
			name:       "KAT512",
			parms:      MLKEM512,
			seed:       fromHex(t, "6dbbc4375136df3b07f7c70e639e223e177e7fd53b161b3f4d57791794f12624f696484048ec21f96cf50a56d0759c448f3779752f0383d37449690694cf7a68"),
			public:     fromHex(t, "80b70100831d7ee168f47392483119f93863ecb0bc605312d35728876b00f5f57af4c85eda97281d574390bc7256193668dc98625354ab52b9bce781c5771cc26099f6fbacbee1784d194887731f097c87e082cbeac57d30b7b9a293872c841466f2244cc65ff4ba653d6751dfa22051d553369942c31c29f91307af573292d697a8c31612e07b5335cf08329fd246bf2a32200a8cb0c4b03b9d09c5ba1c3919539e9229c696924348282f696b1525e5603806b4db618b3dc8630cb286e4311721bc5031f257aa925bf80960445aa8d8e69788e99da95c1d10cc3be858528db0cfea003c74693780a65a36e62843b3be15406543d22d83507c87b2786792c80fa5628454a310394dda4c2ab59493850257d6d3bc107186d9062707f354e81a1a10fcb763d31a4ec409aa243ed2e59bb189855eb1656266bb37500785ea08cd88c222a8c53a8777cab42c9c238a00d59369425026e99d2ae6040af6709029ca8789c897b329fba748d69c8a7148c95abb0c71787c58f12f21f2213e389242aa7fbd320c12ac42c611606cb8c1d1b4625886a145a535bd65bd0d996b330c1657d61a87e90417003225759820a3bbec505cdaf11193229aae173cd12bad22a7a30a76a9fa7636c3d5aa48e1784012a012f14168b7853d2a16f90ca02cc33b2006c08f26c15fca29612cc792e1cf02e1321a75a810891986667d4148af36e65e1a592589029617734c315c0e39b7518c8660cdc265d0c813ef20a043317fae5b8e40546eecf71d6c054fa66b49401309bef30fd51a5519755da9104689b26f0839154c847bef2365943c0249483aad9a7367c980a3d1ce46d2008a15275ca3bca4834e6f9a3036c0cd80ba228d34b9780244d5c0cbe907c6fb43824a9c0746471639cb86188c60c3b253215cc91692bcd1493d6a444d536446e02968138001cc287e0e518f3aa25d8c3b95b3c35c59f4819d484976029af05a263c35336b261f77b2cdc29389f084c04cbb370c48562b5b50771c0fb816908e198dd6d53f76e48bf042c2b1f82a3a40b8daf51f46d76fa4bcc9d3c894ff850c0faa32e0ac33901a4c79139f5f20417ec1a190607044f18bb824cf350c78ab3ddf3c2c86ca5543f715"),
			private:    fromHex(t, "fada6a79a379d2cb36c856450c446f4484b86a560c6170564d002e4b74073f66a6fb6a57bce1be92a1a1b531c61f50882a0084508542a1e1c3b3a950f2072e9a16544e46ca20284b6012a62c697ac858615e181e1ea0b55b002119090b7b871920e9b894b07a281269dca15faf4a09b0004cac61a2cea73f28057dbf1219d07747b381cf0de52abad30ca0f57873b2bfa012bd5bc24805f3657ad0ba6bc4988cd9c6de492c0d433ce5aa328bd6c6cb502463340dc5e029d2c8713d780f31f441c24c4000e56799a6bc66b4a193c73ced560f8ae43f9b2075ceb778976b7f111acb38a306f2b70a2bd8752e828086ba0f3e811a8c3b0d5f8b9072159e56ba1e1008009195af58a85a3e271f00ac25ccf3233cb8716768ad98e7b1f2890db6170f2b614f56c1933871ae1a413024ca9a2137795c8a2e9e15280ff108aee328235751e569ca63a7821f29ad26706b231224d95160bd7522dde0bfe6e0a8261974885a2fdf217f8c16c4f67c0e9fb2a2f7030caf881d2c8b2e6a6863906192108b004260b0adea07c0b349d588110a9cbb699b3952bb112cc7c8d9a759b9554c1f991ea1f51f4c6178e43827c5149bda077fbd769a3b818df71a42860783fd233d1b26a96a573e99eb915f6bc18d813ded14a304c1358e470570d25478a6b6ba2ac5612890b5a569e5263342459cb9ca7674f228396954af748d9d50135342713904cc59106e0bb21942b4066f86bf5d9c3cf1b6c08692c5b9881b29971088a8b415e26c4a2567588b2ddfb68d11146fcff0b4cb79c57487018c25541d3267a10640e430bfebbb4f45a799c9f554d1b69d70c79d17124f9c01cf3ad6569e77a4e1b65704701006452f45a72f3298c660820f1c206af700c9a621923c3911cd518e022404c870c3d3b3b6831a82536a3170334e3159b0c959036c432cf5b484b12c75ccc3c96ce328fbba79e2f724789a8d27f7af8bb08645d2c9a3e87f8042c36227194a3c0e14d09129d069d5379dbd606565d915a3bc9882e87423a062000a5f4c5523ec9447cea1643a97ad33c1986246ad91e273ce32acaff45335996537072180b70100831d7ee168f47392483119f93863ecb0bc605312d35728876b00f5f57af4c85eda97281d574390bc7256193668dc98625354ab52b9bce781c5771cc26099f6fbacbee1784d194887731f097c87e082cbeac57d30b7b9a293872c841466f2244cc65ff4ba653d6751dfa22051d553369942c31c29f91307af573292d697a8c31612e07b5335cf08329fd246bf2a32200a8cb0c4b03b9d09c5ba1c3919539e9229c696924348282f696b1525e5603806b4db618b3dc8630cb286e4311721bc5031f257aa925bf80960445aa8d8e69788e99da95c1d10cc3be858528db0cfea003c74693780a65a36e62843b3be15406543d22d83507c87b2786792c80fa5628454a310394dda4c2ab59493850257d6d3bc107186d9062707f354e81a1a10fcb763d31a4ec409aa243ed2e59bb189855eb1656266bb37500785ea08cd88c222a8c53a8777cab42c9c238a00d59369425026e99d2ae6040af6709029ca8789c897b329fba748d69c8a7148c95abb0c71787c58f12f21f2213e389242aa7fbd320c12ac42c611606cb8c1d1b4625886a145a535bd65bd0d996b330c1657d61a87e90417003225759820a3bbec505cdaf11193229aae173cd12bad22a7a30a76a9fa7636c3d5aa48e1784012a012f14168b7853d2a16f90ca02cc33b2006c08f26c15fca29612cc792e1cf02e1321a75a810891986667d4148af36e65e1a592589029617734c315c0e39b7518c8660cdc265d0c813ef20a043317fae5b8e40546eecf71d6c054fa66b49401309bef30fd51a5519755da9104689b26f0839154c847bef2365943c0249483aad9a7367c980a3d1ce46d2008a15275ca3bca4834e6f9a3036c0cd80ba228d34b9780244d5c0cbe907c6fb43824a9c0746471639cb86188c60c3b253215cc91692bcd1493d6a444d536446e02968138001cc287e0e518f3aa25d8c3b95b3c35c59f4819d484976029af05a263c35336b261f77b2cdc29389f084c04cbb370c48562b5b50771c0fb816908e198dd6d53f76e48bf042c2b1f82a3a40b8daf51f46d76fa4bcc9d3c894ff850c0faa32e0ac33901a4c79139f5f20417ec1a190607044f18bb824cf350c78ab3ddf3c2c86ca5543f715ca875d7c7e8501256071ea518d2f185b05626aa3d1c38cdbc2d006ed0051aac6f696484048ec21f96cf50a56d0759c448f3779752f0383d37449690694cf7a68"),
			randomness: fromHex(t, "20a7b7e10f70496cc38220b944def699bf14d14e55cf4c90a12c1b33fc80ffff"),
			ss:         fromHex(t, "2b5c52ee72946331983ba050be0f435055c0547901e03559b356517889ea27c5"),
			ct:         fromHex(t, "917e59d1e182a29648a61955a154b304a842f458eba593f3065fb7d744fba24fa3a0d538854e32844db248d48100c389c4c4b3ca6c234f2f61a67932aeee808dbfe98d896d1e9668820965c6343bbb4a4de64b7a99fb53b5264e3199d587ffa5e0479f6b7386b23cb9c243fa6f5457fc97dbc96dcc039bd6c4e7e85a90b5c5232416434ea942cc71134bb9a2f4991e0595e3487feabac479cab9510d57b86250ee7c96a67a9f2c6121f7daa02c5cfa3b23b0c732c2b15694e1ccbac82b787cf2118d08425cbba121882217940c894cbe47aae2541f5c6e0bd1baab31fd2b2ecb34b9e693f6fc0fdeea906716d08818f51df0c4694029e8c3234be0b62471b2769d9ac4ceb947602380f3a497b2a01ff7b8746c1c7ae81983e016bd65c7cd1762c191857e41c2321981f6c7aa8d7afaaa9fa0b557ec1ec1285f8b4d6c788aff159ea5862e814d0825c8834b7ca45db7c8eda3fa6a6a7b8a40519529bf74b6a0f80c484917f40c107d182bce3e344fd36d1b377a982f6bf2361b8d662875c166dcca73240b86df5ee0fa4231b356f0cdd6b3170ff89113db0b1b9dd264335783222cbe7be844642b0b1988d18b268da6f78cc944f43b827143c4dc5ee1f0d658b87b9c00862f263d6f5798fc82e8be079a1108defdd4c7863c3147e9bdf0fbc84deba215fdfb9ca4237a8419b26fdeff63a7f95c442bce67966ebe6b5f9af1fd2a7cbed648ea7276db742dac3e470f6cc741d82e77e9c0dd019b5458177551975b59633be67b35c0d430b725524deafdeba6d3643c5c82ebb52479669c411bb56b397f8d37b8f7fa4ced0316546caaee419c0e7f1d96a0ec614c6c9c8e03e010031765121f1eb8fd549fde046a50443ebab9fea2e78a29f4964455928db1f9e7820e533c5712989b3a3637ea00a1de3e469a800c431d4df243c1dc7d6a89ba7900d52b78bcc103474f9d2c2128025c3193c4d1a09f50905ad2de7fe8e09f047e0e72e6dab0edf7e3b08ed1316acf857254b6c1fbf64ce582f2990ccecf9505fd7e8517998aaf583be1aa641e9b54dbb91ca9d0700913967fb0349201b5d679b32d"),
		},
		{
			name:       "KAT768",
			parms:      MLKEM768,
			seed:       fromHex(t, "6dbbc4375136df3b07f7c70e639e223e177e7fd53b161b3f4d57791794f12624f696484048ec21f96cf50a56d0759c448f3779752f0383d37449690694cf7a68"),
			public:     fromHex(t, "01f60af1dc8e6360ae78b59d4a5042eb9145a269046d6236b8304f305c2d9dcb189fe5a62df89b2f5a7bce3bbc753c1e78f730a99869f809aba856b676b707b26601d1d909bab32451494eb7d0a2153a6350b79789a9b115f83ea12037256562f06a1d5aba378da77039d3bdecaca8e6a22a49050a76300a0267cdb38b7ac77903c50ca53b99283cac6b95fba651b11a4d1a692e4072965060587669f253b1bb182e661446168ac60221894660020e9bb5f5b7124a0303e2543ea3ea6ce97a2482b255ca346fb27a847b33b93f3ab2d33064c6e6632d1a23f1144e907b246b479f4a5c928929a1e24150f5241258a5b67766a66f6a33846495907828ebe44ecc5b73124071ba479073910410a16d5d5696b48b194752979795772a91c348f502b37aa650983ebb89bf3c081ff273544129c9137a6e1834c8f2e7ce14c7870c53c05b9b94ecd38e6645911b0912336863ec168831f811881075cf38a59de4b5c738aa6ef03d779b295588cfb62491cc7b3e08b48473354f9ac8061c152a9e205997499b970b69bce66fe42bca2924ccdf0103d0a4c39193c2df25118d72b17aab26b0c60d4cd2c306ca4696c185de05035f4a09cf970aecc8cc93436f83b1aeaf452c41929a2eabc151938f74c93b858546df2264eeeab602e04a85c522f8fb1a5214afd8d4cae57a47b6f381a23126bd9917173128af917f1d483691c450d1151cfe9a1492d473ed862e27da92500c86a20019e9f975e4f54ad319ba2c5630c4014219d7ba235456fe530140193d662445e6a941d1e238567ba8d4d95ab1c7447d690821876d017270cfb169f2d792f03c800720697b410ab41c66f2b24585125655eb10aa1087ffcb7750cb887ad4467377500a6a7d3a82976b415a54469577b4138d919b03f4c9a4d3390bdcb6f1717a5fa4ab25a34f4ba5039bb22c7f3c234ea4427347aa7251464e631904d7cac4784f78b49d5f4a104a301809a779f6466131f9c62bb67147f4cd4973a6aa1c29ae6a8647b6268be089fe048ce990cd638743d285c889a707f581b63af41731f0246b054bc4b47aab01b6842a2709d02e8158ab90f48b69d136082b34cb0673b74aa3f54508ed029fb8f5045ee0639e150ee3b3c85f68a310ec0441980100b42abf2bad10d4a9e0c7b2bc5bbcaf73cbcdc49dc2c949111936779b178974a0392947745a47189bc3fa8a679c80af964a9f9b1b56577274a2a669d2da6704aa496af407fa1aa964cc3dc3140f5f959a7ea974bdb1b83e48a99c0a3e2d75b0669b5c1278962540609166266da18886fc237af30cefd569dbe399e6652e45f06a5dfc9a758a4987088ff8e38a3cf36b9d988f0e070b68d0b88f7bcc41306080d889780c7e238895ccaa4f3577225cca4c8a9330ce613e717798c9670924b271ac402b51538b8b5967ac490dcab5300e6c54d6a3632f3b973e4186ee1a7e2e85649185b26370c387235c4df28a9937a49d4078bf883f4e6346cb3251d9e13f1bda087b285afaa80e262641c5527b0a184b8bc84a62e577314658e2029d850064f7a7b81f253e7cc124a9c5b039dc9b179a80c2f6aee6ea0815172537331a57b505baa76ff5b4c1f0da754b6194f4b39a9b18730d3cdab925d691ed77a8db9927ea233ac2a12744fdc27e5d221b9369adb325d8"),
			private:    fromHex(t, "9c700fe444904db5708e16b1ba7650fbe94f24a6abba262ad7acbd1a1387756566e1ac7a1e545b236c548e8661c5f468c58c3bbc49cccafb7a66a3b61678610784a88a8872255139d979bdb140649b06acbcc91c74d3bc791591b0f31f2c9ab24d329934795405b7570a994e0d128aa08681a3cc58680937401a563bfb4e621a4193416ccb1c3c9d9b23dfc9979f91140b37c6e7a517ae6c8f268b3346e52ad0a311f79acea0a56cb9291ca0161a98aac43ef2ba55618312910012ab603ac4c0be64a498e58ecb217e2a102b8a518bbbf9c457412f030c1a82cc7ea67c8fd14511e55436daa7383ee2c942da15f67581f069563e8ba3752ba159314973dbc7374244ed486c6ad77abbd89cab1c1934153439b58f586bcf00813b050744debb789dc4b3a1d054e710905f066bc2ab7643d2883e096e749988a0612667633a9b98748c23c708d29891e84edc8c4cbc43999ec88c8a854d69402b8ebaa4d6cc09ab42220b8413da34b7cfaab2c6b47f1610cbb1d8b080051fa7d974ff53b71c8726aaac2f3daa9c6a68932d0172f2174d989090b822bacf105b7ae70fa59296d6b2c7614900a9f869db16600939bb1e116b1ce913ceea4ce60a2cd98cab92e2880070866fe04b0423c0dcec04d3f921fb8c0ad5c16a077a3f2484212d90ab2bdb1429ca837af87d29d63438440a273c3e9484a1481b54e68712e3fcc1e562799243ba3f339bf1025c5c1b29e1294a0a7a3efbb75e47b31c12fa65c90a7adbcc2aeab0278c96513b25945dc32b9f382d2751a27ca572524127695765f9b45c88f923c28869bda5c7af4060042913f4d330c0453c985442dca58ee28a94bfeb85f2b49c21a556fff04e09d66aba875a4819390bba7586f77bdfc0b1f639b586fc591ab9250c8951e143c2f9c790697ac51a9c153b493315644a73274674fb083c852a1072b80181be1ecb8f59769ee0903757326625376f9fba3380a55cca42786e11a4769c7b4761c5f5db112df69839579d82ab0340a34dd62c15165bcd67b66f0465546af56b6a637467393b28242c40c387000349a60a730237250709b208956d00fd715b239af96c418ac0147d0c63f8f9af30a272cbd629293395cad10937c32e7454815f93aa9a4c0661dba4dbb1069fa4b59474cf8f10ad45563c983906ed324b5f776e5725be938696c0f6799e489d8b80656913c687374dfeac8adb31536c90c6079069ee142fd800b3721b0aea35220dd04d85b19b872548e7005e92e674a235164d6a2e53b6774af42d211c77bd6454c2445f68d04f357106afc8c0a2bc8e4fa467676a2957b060f0e9923a639274977216341b1aea876a0b7dee4013bde2459c957dcc2b5263b02e2ae3a6904cb856c49bdb5699c16997953cb1056a4cfb362ad3646fb5d7393418b8fe556f1dc924cc74b3f9d7876473355e2751f3e98ef5eab3bb974fbe884d0bda85b8fc4dce0c852853ad7a62528c3bbc32002fa469bb89895621944ffa29429c106c3946320ee9bf3c822115d53e968a76c2581e00f906e60ca372a22686d74c9ffb52a24abee52b788d015bf6a5c7575493527c97f927561df15d47f558b5466c8247277ab35c0170c6c05a8af8e67edf524a01f60af1dc8e6360ae78b59d4a5042eb9145a269046d6236b8304f305c2d9dcb189fe5a62df89b2f5a7bce3bbc753c1e78f730a99869f809aba856b676b707b26601d1d909bab32451494eb7d0a2153a6350b79789a9b115f83ea12037256562f06a1d5aba378da77039d3bdecaca8e6a22a49050a76300a0267cdb38b7ac77903c50ca53b99283cac6b95fba651b11a4d1a692e4072965060587669f253b1bb182e661446168ac60221894660020e9bb5f5b7124a0303e2543ea3ea6ce97a2482b255ca346fb27a847b33b93f3ab2d33064c6e6632d1a23f1144e907b246b479f4a5c928929a1e24150f5241258a5b67766a66f6a33846495907828ebe44ecc5b73124071ba479073910410a16d5d5696b48b194752979795772a91c348f502b37aa650983ebb89bf3c081ff273544129c9137a6e1834c8f2e7ce14c7870c53c05b9b94ecd38e6645911b0912336863ec168831f811881075cf38a59de4b5c738aa6ef03d779b295588cfb62491cc7b3e08b48473354f9ac8061c152a9e205997499b970b69bce66fe42bca2924ccdf0103d0a4c39193c2df25118d72b17aab26b0c60d4cd2c306ca4696c185de05035f4a09cf970aecc8cc93436f83b1aeaf452c41929a2eabc151938f74c93b858546df2264eeeab602e04a85c522f8fb1a5214afd8d4cae57a47b6f381a23126bd9917173128af917f1d483691c450d1151cfe9a1492d473ed862e27da92500c86a20019e9f975e4f54ad319ba2c5630c4014219d7ba235456fe530140193d662445e6a941d1e238567ba8d4d95ab1c7447d690821876d017270cfb169f2d792f03c800720697b410ab41c66f2b24585125655eb10aa1087ffcb7750cb887ad4467377500a6a7d3a82976b415a54469577b4138d919b03f4c9a4d3390bdcb6f1717a5fa4ab25a34f4ba5039bb22c7f3c234ea4427347aa7251464e631904d7cac4784f78b49d5f4a104a301809a779f6466131f9c62bb67147f4cd4973a6aa1c29ae6a8647b6268be089fe048ce990cd638743d285c889a707f581b63af41731f0246b054bc4b47aab01b6842a2709d02e8158ab90f48b69d136082b34cb0673b74aa3f54508ed029fb8f5045ee0639e150ee3b3c85f68a310ec0441980100b42abf2bad10d4a9e0c7b2bc5bbcaf73cbcdc49dc2c949111936779b178974a0392947745a47189bc3fa8a679c80af964a9f9b1b56577274a2a669d2da6704aa496af407fa1aa964cc3dc3140f5f959a7ea974bdb1b83e48a99c0a3e2d75b0669b5c1278962540609166266da18886fc237af30cefd569dbe399e6652e45f06a5dfc9a758a4987088ff8e38a3cf36b9d988f0e070b68d0b88f7bcc41306080d889780c7e238895ccaa4f3577225cca4c8a9330ce613e717798c9670924b271ac402b51538b8b5967ac490dcab5300e6c54d6a3632f3b973e4186ee1a7e2e85649185b26370c387235c4df28a9937a49d4078bf883f4e6346cb3251d9e13f1bda087b285afaa80e262641c5527b0a184b8bc84a62e577314658e2029d850064f7a7b81f253e7cc124a9c5b039dc9b179a80c2f6aee6ea0815172537331a57b505baa76ff5b4c1f0da754b6194f4b39a9b18730d3cdab925d691ed77a8db9927ea233ac2a12744fdc27e5d221b9369adb325d86ff694a73b6701f2a7408773f9909118ef52e1c89285b2cde465a0b04980120af696484048ec21f96cf50a56d0759c448f3779752f0383d37449690694cf7a68"),
			randomness: fromHex(t, "20a7b7e10f70496cc38220b944def699bf14d14e55cf4c90a12c1b33fc80ffff"),
			ss:         fromHex(t, "b408d5d115713f0a93047dbbea832e4340787686d59a9a2d106bd662ba0aa035"),
			ct:         fromHex(t, "16a61ff84787fd4a5f19ca59b3657db3a106a7329e2d62747a2ef85149163109befff6bcb33df66230b8f6725ce719f58f71196e895befc9754d9f042494648c88a6ed4c4cf13f2faf9f651de79dae077733cb235f9dce448977fd42d5486b7dfdf6d7bd9172b14247655d34f10524d469478d9a9639f34d2acde6e3c048d52b308b66245fe9a28cde7983b9d14c03b37715fe3970cd35734771add7aa9b58cfb0adf8c613deafb2b31f6e5c8364d4334e93af8e4943fa947cc67667447cffd036235afaea7f603cb2ea277b97dadf82ea746f6b27396dd08c85cff9304a2e5ce0571fde2e926716bc9f8e4d474b4e8fd34b0dc28376204ea306d30e9a6dd88250b79823e77319f2ef3a77704f409dde8beb6db1be4a9f25ae2e15939dedf1b11a5aa51fcff04068b46d42fbbafd2498264cca4fb78b0f2ab162c7ef569875a13148b9a4b0b9da1787ca0a7033e3eca13471dbcbbe15e34f2b5065b995fe221c2b7ac150334d14e68edc5e049663de362fae8d35e24c202c5fad2153cd044ea962a388f030cdc5dec1c3423183b173c32b22f5800ae45e8e89c8ee4617ce24e60f278bfd1ea0f8fa92486b6f849127da99be7be4c661e2ba26669d6acf619a33056809683e24a2f29e33be7f5f9ac668697e59488e9b8685956cd87b7c47109d603202c201472ec829ea64922e4d0eadd4a4b5a8fb06e0f4bf25a59ced54557388dcd91b387cb6148597edf84a22595801851ca4b9e9e096fdfc96f2444ac9f1247a5e640787fca23e3eb21ec1059c42a65803441df01279013c448dfc3eedfc3355eee1f510086a115f854c36db797a85ede19a473a33e79a80f6f7f6467e1b0d866fe0e57a8abd379934a6a6a492f5f32594d43de2ec2eea81487981bb6394bfa6df5498d74c6db2202a6348a325fbc906b8e820bb00659a2ee12740b14b2e36f4c5dab411c0cd096c5e63ba4d48aa9e92b31f44dc97c0fef661bcf4db895f174613d9d5ed9e836657745ec9deec7af273cec87ef0eaf805da1bc8401608810b8a86f952c6326d09fc8d1d7fd83b4e862e05058e877c056cc5465ec3192b03a4c33cc6b16558d2482d5f84518cbbc526aae6e8840317efb3a1982c3d1719ef15d10f8b077c5c68680be6d3d92e86aaa6eb378cf0559d493257147b55730f49a042325af066b4f9741b9fff5d47972d5acaf52b6bea4e9e354ef9448b62f6d2a1317675a922e14e31578d6cab5a09a71ab270d865151b8ab4c612b5fd5dcc97e45419a1cfb6b8b9aec60f62602098f91f07c238186657941c7a18e4d7ee220f022d5fffd291853b9c063e561b7176f7a235ce45bc86ce4718086df9536c5a5f0abf04c0a84d82bdf69552ade3135433c10a1ba69d688969e6d9dce54d3b3aae3a7f2ab904e657e3fb05241fac110aa07e62cc3991d7d0d6329b5ab9d69d7336c0d148588c9f0921325b85df5fd30db80a56a3724372153641961aa7e042bf2646ff46022c059d5794c3a4b7f90c410de71a5231dd9b83bbd0e6bdab1bf9e62f"),
		},
		{
			name:       "KAT1024",
			parms:      MLKEM1024,
			seed:       fromHex(t, "6dbbc4375136df3b07f7c70e639e223e177e7fd53b161b3f4d57791794f12624f696484048ec21f96cf50a56d0759c448f3779752f0383d37449690694cf7a68"),
			public:     fromHex(t, "a8122f376b3f5d355263eba522c43995044beca78b9ba9924b87035490ae78a94d523c7ba588a386eb49bf652fdf12716373187a1ca047cc6138627aaeab8f6cebbf87a176b86c9f7f093c8f5b0bdc147399e839ae737038d0bd0142369f9c9d46b25b9ae540b80023d5d757e76b3fdd3064dd2b44cd06b44369277147b615654b325044e1bc606fa629055a2e6a4b02b2f1b1aa98a69391c91bd98f1058aa18d9019ddbb6dce60a070bad4bec3df37a0d4dda8410288830e9ae509880a02b248e1bba8edb1cc520517c11b64d68cc00c69475a2a2d9c56a2773a02424b2bef17ddfb4c4cc503d05c888946579e4027dbf8a89370c74fa66c8a325c2342963994c202fa05179352f92a18630822892151a7b8b163eea685c2c4f026015fee782f1c53ca573807afc6bc766be008796fbb906e9e1abd1cc845f60423f0978df89924aa118a2b41c7f458308e87b190a27002ba7f773cb65ec87165a6530a0971a752069a42afbd271e1e236fc155aeff759ec762551e5bcdf3a66d6a9af92b4ce14a29ed410cf72a808e90c81a46074611059802391006c52c5994519718a84f445e8d9c3c6616e0268b2e1d5af48b091c6053b7477740fea361853364de642a44b83364235b6a865037878074b37400c82591794a09055d5b34a9f186e1574ccb3848f4b620016d807b945485bc4c9e17644fea65f5345c862d83aa1a4cd1b676409fa545c5712613c267b80447df08c87e532bd77500c14b08d7ac00dc7c2fa50b1b5c26d27dca74ad41f9b0761426321a9b3a992a4c3fa151021bc2d17c88faab7274e65cc23d283ab55a951495872455bcce806a9e803c2d9b566a6addebb78120ba9361ca9b8b10323f682cc5b9131d44f262501ed861c866c9e31d09789f81dc3c773a4464c4cc9c4cb838b9bdb16ff26227a9871c57734b5c59c27e77f061a7b56963296f48ae58a85e34063aaf644fee4178b3a9647191c4f022356cc5b17e247644a809be0c04ca57df1dbbcaf1c2b1645217a615b98aa048ca48ad7254f5b859249066abf6a33d59521b07cc684a1ac23089101c80dfacb82094445d3358e6eb6461cf614cbc22248259ed19ab0d6498f3f20c660e9aa5ae877d2973611a377b14860f9398408575af51819936883d080218ab0acafbb639a3019a38878a45a1264b30f709c46a3fa5e2d571f8f594d3ba90c432813b78005e1d20b72551f87e978fcd8487bb584a4e97a66a058a9a750d15c479919c81ed235803b8a657a8e08804f8c109f8dd16074124df22b0c4b276d2ac865b55a538d73826226216ba21ec7368f30c638e3f201288a23c2861c3c88599f9027120b0dd7575a8855c5411554f699b47ec667a3b2a62f828b2458965130126f29b7525205ef335d4740020a61c9c742aa3be0048eac3aa69b7d9a18846e5498e66b8ed550cdbd91bbe0d0482347bfc39964f3f63cf4967ea9321418c377b8262e63225e17621ffea466a6335e822059e46a8a5eb16ff321b3a043588c0bb6e5d2b4f3a8c100b05bf2715523433dbab50491216b9cdc2d526aae3bd218404c33beba959719b48cc9ae4753512b171c75763b38fb4ddca82750abb505b8c3fc519e7536560d639ef2476953b7bd7966c13bd09e8af17a542ab4927151ad4a46e8843c055591e78ca8b4e5956822815a3c98eff1b9cc49aea06bcd24f9c70941a3d3f0810de25afc154dd76069f2c2c367bb52a2c309ccf1708d514d3f871cc4e3bafe91549b44bbf4b24c5525a19bb6abd50c693407851e1a7632883f783a08e5483e7ca7876e4b2889417d7ec147e8624e4c83b8bb56bdef29aa47a5735034b48beb8c36c6223f184502ecb3f8072d61e41cc8a21784a24be3c652f2d697a5a28ad605cbf0cb1f928a25a13a9933700481f341b2a3c279021ed2d701303699aab12df4886303d3b3e2949341b577f85ac326284a85f2494976790e762ec51c1a88faa2f5e03c0fab44e399735374502f0029cfdb74e9e1517263654262320ff3c15ff48067c701df8436507373fdc7a475f13d961a45718ba1a4b56f02d0095030194a5cb34838728387a33a310561e73d18c2af34116384879cfd2c70aae0400eec2bd667c2a4c5a051e643c7d8ae8d1bab4352b9bd27b3e647259bb1cccb2304d725cb2e73c6718b5abc88800949b2c1d03f159fbf396adca8526f1b476f80fe91c13308d645"),
			private:    fromHex(t, "4b8ac400218a249150aff2339367484a6bcbf637646cf750156a7b35a936d05a25647a3368e4891a030beba99ff9d550ca830ebf9b4aae231fc2dc4073aa98411a188bc2442c5349f20140c5a378037679840b23a795bd0ed5949d0b5d663bb01c575d7ff34594f4007053194ca6c4ecf90458e64f80e98ecfc9b062945eb12922c5813fd1b9370b7ace2cb5707d72846274af203cc6bfb18a2fb35265b1160c33393ab658d712434a9149616bca8b839c8ffa85c7054d6e697e6f181b310858774c94fb4089804b989cc91cb3dca5da8b31b4733271b412cc38477b46836b088373a5338d6816e7f8993ceb16e260086203c465a769be7968a9189c5e0283de590d5c61c5b1a383d1635bedd47ba4c86d803c625f22ba8a86093f03baa8c638958805b5367e1b793705d0c5aaf36f2a52c01c803516b0c38e8407b3e61332453cc37b73ea629117d069b937038fe99f3e069766b491a503540a585382619d25590f2ba31fd125a24fe066b63a215cb6cfa581381b0b91c3ec4ee5e15f6f566330da146f32652343afcbc56293b30ebe399bd08327b1f656b15baefde61f7a551932c9b4d2c88eef799b3bf85c2886b7dc31b81cda27c0b73bf4cb22715482979974887aad36297f3e0365d8c6164ae974d0ecb0997250a7e92a74fc3d5abc3d78d23076639f9dd74374ec54ec0a32f6bac11ce8acc2eb70ec4c93ace48688e65b084725fc3899dc7ac1469cbb00588782e2792c30c4fee8ac44168d8abc8c535a3987970c9c706aef78b8de590569791cc1c9b3e8f72a49cc478ff2abb0e5616132693dfb7cb5386fcf6ac7747ab328d12d88496764fcb8ee682c886462da1ac8b028aeb65b6c77fc94f6511ef6c20f66485ca6ea27b7ba339f8865fa10957ef2c7efb46ca5841976d6b3dccc7537152f8e142cb18c93e232124a426f0b0288a3045c94f5a9450156d8f590a497995f68c7b23799be486163b261e933b1c161b148db3d0634241810b92df78d18989f25c79f9d081fa13b2607e099cfa15567e83faa94b4dd5c3aaef8672f533e1d643c19500b20b55fb4107b97e64409e8910ffc052a91b55a90206aa23901761be9e8577ff6277d087c10d54cc611259dc3a5bf094556a6542d5508de81a528a2c1c2da3bfc821894f22de933007a4b0291a46b655986859b183fa5393c4c6acb74876159a86a797f14646bb85612bbc3ba9af491b180b3097896c1ea7164e148b3a2b37fbbc049c2cefe8863faf4779bc0a3d2203c4d6578b4680ed2510f7039783a6a771a7b97287a511158c4eb6455a1ebb8fc983c780bb28891644f360a98b4b954b8a283470f472096360703ae9a63358703a00365da3ba05e0244820663d15784ae793772116b24f3201ec799a030aacdb433d11409eb98b1db93a04a9c654a6188cb8474c280b4dbd43f386a3f4499ab7529556a38449d30181088aa323846c2db45a1d9359ed40d0429a250b66015173b2aaa532523606737a1f823258529393d28c9fc213b376207d9c539a2a4908aa96230f2c13801a6b36925b4166196373ec7f743031acd723b631232458abaaa019365d48915d62b4f30a1bcee39334cf9959f168e0b6baf63519cd2584ce780ca7c280f3c395725b03a0a518353d2b2fddc563ba28ebcc2101153841e5a17ae302bbde2b800dbb2bd60ad294439384154967274fe142b437b64a4f0a6a7a06c96ac837d488d9868ca00f3bf189ac2172873d65b284a07c3d88ac626da319e534031ccb825ba60c55210638b74a57ac598c550ae17ab4ae272eae28e3b560cd2622734e3661ec325bad6451ae1abe5e748a34c3b14ba7d13fb9bb3705a17b704e6d49ba064641bcccb29d27e1544cd1878b37b4944e56527ec854c8d06cd30da9614032779b705c40216b4b76333c757b09c8ccf1190471397600356dc7422f2f5569de11f6a6542b1e12a8e7277172402204571230a0885c41dc89004e7c5cbc2973b9640cf710b72bdf3acfc0550788b296c4249ce30a0be86632b9b973a77b53d363133d007d04a99a879587d155073171bf4992e2d989fab06aa6799493b7868c92a58b68b7df4238630da07fe443c49c149beb058d0d6403957be71c5475c46c866c1c1859a14301681f772cd780962534153d7e91e39862466e99fa8122f376b3f5d355263eba522c43995044beca78b9ba9924b87035490ae78a94d523c7ba588a386eb49bf652fdf12716373187a1ca047cc6138627aaeab8f6cebbf87a176b86c9f7f093c8f5b0bdc147399e839ae737038d0bd0142369f9c9d46b25b9ae540b80023d5d757e76b3fdd3064dd2b44cd06b44369277147b615654b325044e1bc606fa629055a2e6a4b02b2f1b1aa98a69391c91bd98f1058aa18d9019ddbb6dce60a070bad4bec3df37a0d4dda8410288830e9ae509880a02b248e1bba8edb1cc520517c11b64d68cc00c69475a2a2d9c56a2773a02424b2bef17ddfb4c4cc503d05c888946579e4027dbf8a89370c74fa66c8a325c2342963994c202fa05179352f92a18630822892151a7b8b163eea685c2c4f026015fee782f1c53ca573807afc6bc766be008796fbb906e9e1abd1cc845f60423f0978df89924aa118a2b41c7f458308e87b190a27002ba7f773cb65ec87165a6530a0971a752069a42afbd271e1e236fc155aeff759ec762551e5bcdf3a66d6a9af92b4ce14a29ed410cf72a808e90c81a46074611059802391006c52c5994519718a84f445e8d9c3c6616e0268b2e1d5af48b091c6053b7477740fea361853364de642a44b83364235b6a865037878074b37400c82591794a09055d5b34a9f186e1574ccb3848f4b620016d807b945485bc4c9e17644fea65f5345c862d83aa1a4cd1b676409fa545c5712613c267b80447df08c87e532bd77500c14b08d7ac00dc7c2fa50b1b5c26d27dca74ad41f9b0761426321a9b3a992a4c3fa151021bc2d17c88faab7274e65cc23d283ab55a951495872455bcce806a9e803c2d9b566a6addebb78120ba9361ca9b8b10323f682cc5b9131d44f262501ed861c866c9e31d09789f81dc3c773a4464c4cc9c4cb838b9bdb16ff26227a9871c57734b5c59c27e77f061a7b56963296f48ae58a85e34063aaf644fee4178b3a9647191c4f022356cc5b17e247644a809be0c04ca57df1dbbcaf1c2b1645217a615b98aa048ca48ad7254f5b859249066abf6a33d59521b07cc684a1ac23089101c80dfacb82094445d3358e6eb6461cf614cbc22248259ed19ab0d6498f3f20c660e9aa5ae877d2973611a377b14860f9398408575af51819936883d080218ab0acafbb639a3019a38878a45a1264b30f709c46a3fa5e2d571f8f594d3ba90c432813b78005e1d20b72551f87e978fcd8487bb584a4e97a66a058a9a750d15c479919c81ed235803b8a657a8e08804f8c109f8dd16074124df22b0c4b276d2ac865b55a538d73826226216ba21ec7368f30c638e3f201288a23c2861c3c88599f9027120b0dd7575a8855c5411554f699b47ec667a3b2a62f828b2458965130126f29b7525205ef335d4740020a61c9c742aa3be0048eac3aa69b7d9a18846e5498e66b8ed550cdbd91bbe0d0482347bfc39964f3f63cf4967ea9321418c377b8262e63225e17621ffea466a6335e822059e46a8a5eb16ff321b3a043588c0bb6e5d2b4f3a8c100b05bf2715523433dbab50491216b9cdc2d526aae3bd218404c33beba959719b48cc9ae4753512b171c75763b38fb4ddca82750abb505b8c3fc519e7536560d639ef2476953b7bd7966c13bd09e8af17a542ab4927151ad4a46e8843c055591e78ca8b4e5956822815a3c98eff1b9cc49aea06bcd24f9c70941a3d3f0810de25afc154dd76069f2c2c367bb52a2c309ccf1708d514d3f871cc4e3bafe91549b44bbf4b24c5525a19bb6abd50c693407851e1a7632883f783a08e5483e7ca7876e4b2889417d7ec147e8624e4c83b8bb56bdef29aa47a5735034b48beb8c36c6223f184502ecb3f8072d61e41cc8a21784a24be3c652f2d697a5a28ad605cbf0cb1f928a25a13a9933700481f341b2a3c279021ed2d701303699aab12df4886303d3b3e2949341b577f85ac326284a85f2494976790e762ec51c1a88faa2f5e03c0fab44e399735374502f0029cfdb74e9e1517263654262320ff3c15ff48067c701df8436507373fdc7a475f13d961a45718ba1a4b56f02d0095030194a5cb34838728387a33a310561e73d18c2af34116384879cfd2c70aae0400eec2bd667c2a4c5a051e643c7d8ae8d1bab4352b9bd27b3e647259bb1cccb2304d725cb2e73c6718b5abc88800949b2c1d03f159fbf396adca8526f1b476f80fe91c13308d6452fd626053c941502e28d796cd655a3cd49df9f15ca02ad626e486f6a4921106bf696484048ec21f96cf50a56d0759c448f3779752f0383d37449690694cf7a68"),
			randomness: fromHex(t, "20a7b7e10f70496cc38220b944def699bf14d14e55cf4c90a12c1b33fc80ffff"),
			ss:         fromHex(t, "23f211b84a6ee20c8c29f6e5314c91b414e940513d380add17bd724ab3a13a52"),
			ct:         fromHex(t, "707d18cabcf89670c80003b47d2b8678ad0da4aaad781a3351e82ac3e447e7019af5cb86020fb2ac727e79654155835b45de9b8af5e5c7efa01295da8988131dc8d6edb0645c3e4116aab080c5a571e760416fe8e299c89811963cf9776e0c828751701f90e26435897f8fdf7a7afaad987009c0eb12fb914dfaab1fce9264f55ee0cb4d89449385dd081b02dace9b179a54513d281529b8fd61c53e3bcfc9e2c3ae72339a6197119f97d44b05d3f36a5abe0a3f7ccbdbb91d24b25856462a649b6c1d46ae6e05e999274da9239e674525a522f6141cb95de96b93b39f0f7d090d4b1c0546ef6fc3fd08e90b228f657af31eb933c9cfce634af6bf820d5e185f3157efbc926a8ae420f29300513baf30236cc11447e74aed4e262799d77a5cf22b0a7da1264225fcd68cf07670bbf5b04f3173d6142dc9426d9006ddedc5d59443a11c8d20453c2867c10434ab6b05b4f0b467b67a4203037c16ea720945de474102e168d5f79d7f530f61d6b7973ed6457e877fb2b45e321ded8ffd30368259b3ea60b4cf9d11c5a0087f27ed40d5365c3d0b8ba2e8cdea59afa35149970488cea9e07c9434923e96e6a99cf3a0be11016a86dc9eaa539fecbddc6cfd597a28aecae2757234340194f4fac7e5a204821382d5928c8e035833c7cad49bba4304e826d5c024c7cca2acf95c6cbbd68c3848554a855695c248add50c87dae4a49d11cdbc7c757ab1e00b8fd21e7854a897dc21b40f087b3dfb131773d9d87401e5d5017ab1f86430f889ff66cc9e04be863e7e38ad527e7644c8ce93d0bc2e255cdc3be2d3784ed0c12649f5febbabac0c8e4c917c8bef29775fa3db1ea23feddc609539c23354dce722aee71c45407b34da006f24452ea05e766e6b5dcac937ef743aa908a7b7cf2f3ed8931c61cdd343dfdf6c588d1b1f4099ba5be53e7691099660877463c4310a36767ee27e0dbd3132acf6888421e1012edf383d4eec9643e8a10b50e10527c5a1474458b35e54b841fc02599ed07c190154525c47b85e69b09e8208dcf36f7e38d9f1090b8daf0a324d7cb48ace08dac11be460585dba9061abe7ef724343a4baf1c74090e8d7918648d0ddc43743bc031eec9e3a2912d870f50edcdb6e292456c400006ef65eb2c24e038ca3ddf975e2a2611a8b187e33e52aaddc119ef9e6403c61924a7cf229f6619ef9baceee7c04f2675996174c938078f50ccaf6d6580fced01564723d2979b33b77f689951b7c77b650e48a840853932612c080f9b55bfc78de641e0902c5503b2f6cc450664771b94d5590957b669ea08b96f368e11eb905427e2650ed185d6003ab704e23889300cdd920060d3934b44074783db397172838c9be318b5f892058e67d9ec94019870d758229e63018cd85d4492e0eb8c0a90d3a666e7616ddab331601ec9611572929ee74bce8d3bfb8a708858fdbf661bea1f0927f6e5192a86151fd03b001936c82da6d8c147a1af2e91b22a402ce758fd743226a870f3e3635231a390a20c6aee172818979dcc4db5e8bd9802bc5c0bffda35c288d027cbade7d615996879a09292bb3ca2c9720e741e51959d818c9df6903bb711a93ba67b845397dd1d578c6b937f8c3eee4675046f3c3004ab104a436c551352e70d5179c43ce48c5ee710744de4596b3c4cdb12181d0d96ac0ec69aa1451159fabcf3fb8899809aecc4d4f097e86b4b735215c89d13b0dafe75df0020b22bef4973b457f548b4a8998dff79232ec446951aa7ebc92212bae1a06f782be9925a532e10dd02aada8948766c427ed5a579936ebbf5c7a2c9762fdbfe14c70b2c0118378acd644056fec83c774b54867e3889c2af117661086aa5abdc1bd1be41c0f66343e0ec517a7a59849b2b5a37a990ce4487b098dbdd9178b288411f4373654c873ee8ed018156bb3401153b096f853aa14c365b2c3215413ebce8dc07c4bafdd02613e1659056a4d010e970b38dc7e10072403d8c9622eebf4030b6ab640f7022d5c2c938c0ca2156bc16164b2320663de1f904a5c0d9f63d46eb413081c809af2cbc247d26bb6cb74c58022cbc9b7d60b17d03255e736024b6146ab9f1c1c6d648b9fdf256a602b7c469da04bffb6b7355728a05308b9336a49a1522d7e7ee0ad2fd2472bb9cf882a4851f5ba5b433def666fb0bfed4358afdf5b6005051e74c16244f4579288a0da8c2f49598f74"),
		},
	} {
		t.Run(tc.name, func(t *testing.T) {
			sk, err := tc.parms.GenerateKeypair(bytes.NewReader(tc.seed))
			if err != nil {
				t.Fatalf("GenerateKeypair() = %v", err)
			}

			private := sk.Bytes()
			if !bytes.Equal(private, tc.private) {
				t.Errorf("sk.Bytes() = %x\nwant %x", private, tc.private)
			}

			pk := sk.PublicKey()

			public := pk.Bytes()
			if !bytes.Equal(public, tc.public) {
				t.Errorf("pk.Bytes() = %x\nwant %x", public, tc.public)
			}

			ss, ct, err := pk.Encapsulate(bytes.NewReader(tc.randomness))
			if err != nil {
				t.Fatalf("Encapsulate() = %v", err)
			}

			if !bytes.Equal(ss, tc.ss) {
				t.Errorf("Encapsulate() = shared secret %x, want %x", ss, tc.ss)
			}
			if !bytes.Equal(ct, tc.ct) {
				t.Errorf("Encapsulate() = ciphertext %x, want %x", ct, tc.ct)
			}
		})
	}
}

// Round-trip encapsulate/decapsulate test.
func TestEncapsulateDecapsulate(t *testing.T) {
	for _, parms := range []ParameterSet{MLKEM512, MLKEM768, MLKEM1024} {
		t.Run(parms.String(), func(t *testing.T) {
			sk, err := parms.GenerateKeypair(rand.Reader)
			if err != nil {
				t.Fatalf("GenerateKeypair() = %v", err)
			}

			secret, ciphertext, err := sk.PublicKey().Encapsulate(rand.Reader)
			if err != nil {
				t.Fatalf("Encapsulate() = %v", err)
			}

			t.Logf("Secret: %x\n", secret)

			decapsulated, err := sk.Decapsulate(ciphertext)
			if err != nil {
				t.Fatalf("Decapsulate() = %v", err)
			}

			if !bytes.Equal(decapsulated, secret) {
				t.Errorf("got %x want %x", decapsulated, secret)
			}
		})
	}
}

func BenchmarkKeygen512(b *testing.B) {
	pk := make([]byte, mlkem512PubBytes)
	sk := make([]byte, mlkem512SecretBytes)
	dz := make([]byte, 2*mlkemRandomnessBytes)
	b.ResetTimer()
	for b.Loop() {
		if err := mlkem512KeypairDerand(pk, sk, dz); err != nil {
			b.Fatalf("mlkem512KeypairDerand() = %v", err)
		}
	}
}

func BenchmarkEncaps512(b *testing.B) {
	key, err := MLKEM512.GenerateKeypair(rand.Reader)
	if err != nil {
		b.Fatalf("GenerateKeypair() = %v", err)
	}
	ct := make([]byte, mlkem512CTBytes)
	ss := make([]byte, mlkemSharedSecretBytes)
	pk := key.PublicKey().Bytes()
	randomness := make([]byte, mlkemRandomnessBytes)
	rand.Read(randomness)
	b.ResetTimer()
	for b.Loop() {
		if err := mlkem512EncDerand(ct, ss, pk, randomness); err != nil {
			b.Fatalf("mlkem512EncDerand() = %v", err)
		}
	}
}

func BenchmarkDecaps512(b *testing.B) {
	key, err := MLKEM512.GenerateKeypair(rand.Reader)
	if err != nil {
		b.Fatalf("GenerateKeypair() = %v", err)
	}
	ct := make([]byte, mlkem512CTBytes)
	ss := make([]byte, mlkemSharedSecretBytes)
	ss2 := make([]byte, mlkemSharedSecretBytes)
	pk := key.PublicKey().Bytes()
	sk := key.Bytes()
	randomness := make([]byte, mlkemRandomnessBytes)
	rand.Read(randomness)
	if err := mlkem512EncDerand(ct, ss, pk, randomness); err != nil {
		b.Fatalf("mlkem512EncDerand() = %v", err)
	}
	b.ResetTimer()
	for b.Loop() {
		if err := mlkem512Dec(ss2, ct, sk); err != nil {
			b.Fatalf("mlkem512Dec() = %v", err)
		}
	}
}

func BenchmarkKeygen768(b *testing.B) {
	pk := make([]byte, mlkem768PubBytes)
	sk := make([]byte, mlkem768SecretBytes)
	dz := make([]byte, 2*mlkemRandomnessBytes)
	b.ResetTimer()
	for b.Loop() {
		if err := mlkem768KeypairDerand(pk, sk, dz); err != nil {
			b.Fatalf("mlkem768KeypairDerand() = %v", err)
		}
	}
}

func BenchmarkEncaps768(b *testing.B) {
	key, err := MLKEM768.GenerateKeypair(rand.Reader)
	if err != nil {
		b.Fatalf("GenerateKeypair() = %v", err)
	}
	ct := make([]byte, mlkem768CTBytes)
	ss := make([]byte, mlkemSharedSecretBytes)
	pk := key.PublicKey().Bytes()
	randomness := make([]byte, mlkemRandomnessBytes)
	rand.Read(randomness)
	b.ResetTimer()
	for b.Loop() {
		if err := mlkem768EncDerand(ct, ss, pk, randomness); err != nil {
			b.Fatalf("mlkem768EncDerand() = %v", err)
		}
	}
}

func BenchmarkDecaps768(b *testing.B) {
	key, err := MLKEM768.GenerateKeypair(rand.Reader)
	if err != nil {
		b.Fatalf("GenerateKeypair() = %v", err)
	}
	ct := make([]byte, mlkem768CTBytes)
	ss := make([]byte, mlkemSharedSecretBytes)
	ss2 := make([]byte, mlkemSharedSecretBytes)
	pk := key.PublicKey().Bytes()
	sk := key.Bytes()
	randomness := make([]byte, mlkemRandomnessBytes)
	rand.Read(randomness)
	if err := mlkem768EncDerand(ct, ss, pk, randomness); err != nil {
		b.Fatalf("mlkem768EncDerand() = %v", err)
	}
	b.ResetTimer()
	for b.Loop() {
		if err := mlkem768Dec(ss2, ct, sk); err != nil {
			b.Fatalf("mlkem768Dec() = %v", err)
		}
	}
}

func BenchmarkKeygen1024(b *testing.B) {
	pk := make([]byte, mlkem1024PubBytes)
	sk := make([]byte, mlkem1024SecretBytes)
	dz := make([]byte, 2*mlkemRandomnessBytes)
	b.ResetTimer()
	for b.Loop() {
		if err := mlkem1024KeypairDerand(pk, sk, dz); err != nil {
			b.Fatalf("mlkem1024KeypairDerand() = %v", err)
		}
	}
}

func BenchmarkEncaps1024(b *testing.B) {
	key, err := MLKEM1024.GenerateKeypair(rand.Reader)
	if err != nil {
		b.Fatalf("GenerateKeypair() = %v", err)
	}
	ct := make([]byte, mlkem1024CTBytes)
	ss := make([]byte, mlkemSharedSecretBytes)
	pk := key.PublicKey().Bytes()
	randomness := make([]byte, mlkemRandomnessBytes)
	rand.Read(randomness)
	b.ResetTimer()
	for b.Loop() {
		if err := mlkem1024EncDerand(ct, ss, pk, randomness); err != nil {
			b.Fatalf("mlkem1024EncDerand() = %v", err)
		}
	}
}

func BenchmarkDecaps1024(b *testing.B) {
	key, err := MLKEM1024.GenerateKeypair(rand.Reader)
	if err != nil {
		b.Fatalf("GenerateKeypair() = %v", err)
	}
	ct := make([]byte, mlkem1024CTBytes)
	ss := make([]byte, mlkemSharedSecretBytes)
	ss2 := make([]byte, mlkemSharedSecretBytes)
	pk := key.PublicKey().Bytes()
	sk := key.Bytes()
	randomness := make([]byte, mlkemRandomnessBytes)
	rand.Read(randomness)
	if err := mlkem1024EncDerand(ct, ss, pk, randomness); err != nil {
		b.Fatalf("mlkem1024EncDerand() = %v", err)
	}
	b.ResetTimer()
	for b.Loop() {
		if err := mlkem1024Dec(ss2, ct, sk); err != nil {
			b.Fatalf("mlkem1024Dec() = %v", err)
		}
	}
}
